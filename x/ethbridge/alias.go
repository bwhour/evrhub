package ethbridge

// nolint
// autogenerated code using github.com/rigelrozanski/multitool
// aliases generated for the following subdirectories:
// ALIASGEN: github.com/Evrynetlabs/evrhub/x/ethbridge/querier
// ALIASGEN: github.com/Evrynetlabs/evrhub/x/ethbridge/types

import (
	"github.com/Evrynetlabs/evrhub/x/ethbridge/keeper"
	"github.com/Evrynetlabs/evrhub/x/ethbridge/types"
)

const (
	QueryEthProphecy = types.QueryEthProphecy
	ModuleName       = types.ModuleName
	StoreKey         = types.StoreKey
	QuerierRoute     = types.QuerierRoute
	RouterKey        = types.RouterKey
)

var (
	// functions aliases

	NewEthBridgeClaim                 = types.NewEthBridgeClaim
	NewOracleClaimContent             = types.NewOracleClaimContent
	CreateOracleClaimFromEthClaim     = types.CreateOracleClaimFromEthClaim
	CreateEthClaimFromOracleString    = types.CreateEthClaimFromOracleString
	CreateOracleClaimFromOracleString = types.CreateOracleClaimFromOracleString
	ErrInvalidEthNonce                = types.ErrInvalidEthNonce
	ErrInvalidEthAddress              = types.ErrInvalidEthAddress
	ErrJSONMarshalling                = types.ErrJSONMarshalling
	NewEthereumAddress                = types.NewEthereumAddress
	NewMsgCreateEthBridgeClaim        = types.NewMsgCreateEthBridgeClaim
	MapOracleClaimsToEthBridgeClaims  = types.MapOracleClaimsToEthBridgeClaims
	NewQueryEthProphecyParams         = types.NewQueryEthProphecyParams
	NewQueryEthProphecyResponse       = types.NewQueryEthProphecyResponse
)

type (
	EthBridgeClaim           = types.EthBridgeClaim //nolint:golint
	OracleClaimContent       = types.OracleClaimContent
	EthereumAddress          = types.EthereumAddress
	MsgCreateEthBridgeClaim  = types.MsgCreateEthBridgeClaim
	MsgBurn                  = types.MsgBurn
	MsgLock                  = types.MsgLock
)
